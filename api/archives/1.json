{"total":6,"pageSize":12,"pageCount":1,"data":[{"title":"前缀和与差分","uid":"f65c2271ed43cdf14e2eea3c0c440d44","slug":"prefix_sum","date":"2025-01-15T13:00:00.000Z","updated":"2025-01-15T15:05:13.793Z","comments":true,"path":"api/articles/prefix_sum.json","keywords":null,"cover":"/images/favicon.png","text":"前缀和与差分算法思想 前缀和 对原数组求前缀和，得到新数组 通过新数组O(1)时间得到任意区间和 一维前缀和：S[i] = a[1] + a[2] + … + ...","permalink":"/post/prefix_sum","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"高精度运算","uid":"b12e6a1f5d7efc2ae0896995e35e825f","slug":"high_precision","date":"2025-01-15T12:30:00.000Z","updated":"2025-01-15T14:38:19.676Z","comments":true,"path":"api/articles/high_precision.json","keywords":null,"cover":"/images/favicon.png","text":"高精度运算算法思想高精度运算用于处理超出常规整型范围的数值计算： 用数组存储大整数，每一位对应一个数组元素 按照竖式运算的方式模拟运算过程 需要处理进位和借位 ...","permalink":"/post/high_precision","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"binary_search","date":"2025-01-15T12:00:00.000Z","updated":"2025-01-15T14:36:03.901Z","comments":true,"path":"api/articles/binary_search.json","keywords":null,"cover":"/images/favicon.png","text":"二分查找算法思想二分查找的核心思想是： 每次将区间分成两部分 判断目标值在哪个区间 舍弃不可能的区间 不断缩小范围直到找到目标值 实现方法二分查找有两种常见模板...","permalink":"/post/binary_search","photos":[],"count_time":{"symbolsCount":964,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"归并排序","uid":"c668d79bcd807cc57a11ce29c7e08a39","slug":"merge_sort","date":"2025-01-15T11:30:00.000Z","updated":"2025-01-15T14:28:54.572Z","comments":true,"path":"api/articles/merge_sort.json","keywords":null,"cover":"/images/favicon.png","text":"归并排序算法思想归并排序的核心思想是分治法： 将数组平均分成两个子数组 递归排序左右两个子数组 将两个有序的子数组合并成一个有序数组 不断重复这个过程，直到整个...","permalink":"/post/merge_sort","photos":[],"count_time":{"symbolsCount":934,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"快速排序","uid":"9c04d15496da1d73edddda137155e866","slug":"quick_sort","date":"2025-01-15T10:46:53.000Z","updated":"2025-01-15T14:21:43.120Z","comments":true,"path":"api/articles/quick_sort.json","keywords":null,"cover":"/images/favicon.png","text":"快速排序算法思想快速排序的核心思想是分治法： 选择一个基准数（pivot）将数组分为两部分 左部分的所有元素小于基准数 右部分的所有元素大于基准数 递归处理左右...","permalink":"/post/quick_sort","photos":[],"count_time":{"symbolsCount":690,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Hello World","uid":"b9663f58f18133b35bfe243f3e916a80","slug":"hello-world","date":"2025-01-15T03:14:44.753Z","updated":"2025-01-15T03:47:57.982Z","comments":true,"path":"api/articles/hello-world.json","keywords":null,"cover":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info...","permalink":"/post/hello-world","photos":[],"count_time":{"symbolsCount":444,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}