{"title":"前缀和与差分","uid":"f65c2271ed43cdf14e2eea3c0c440d44","slug":"prefix_sum","date":"2025-01-15T13:00:00.000Z","updated":"2025-01-17T00:18:00.922Z","comments":true,"path":"api/articles/prefix_sum.json","keywords":null,"cover":"/images/cover/sea.png","content":"<h2 id=\"前缀和与差分\"><a href=\"#前缀和与差分\" class=\"headerlink\" title=\"前缀和与差分\"></a>前缀和与差分</h2><h3 id=\"算法思想\"><a href=\"#算法思想\" class=\"headerlink\" title=\"算法思想\"></a>算法思想</h3><ol>\n<li><p>前缀和</p>\n<ul>\n<li>对原数组求前缀和，得到新数组</li>\n<li>通过新数组O(1)时间得到任意区间和</li>\n<li>一维前缀和：S[i] &#x3D; a[1] + a[2] + … + a[i]</li>\n<li>二维前缀和：S[i,j] &#x3D; 左上角子矩阵的和</li>\n</ul>\n</li>\n<li><p>差分</p>\n<ul>\n<li>前缀和的逆运算</li>\n<li>对区间统一加减某个数</li>\n<li>对原数组求差分，得到新数组</li>\n<li>新数组的前缀和就是原数组</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h3><ol>\n<li><p>一维前缀和</p>\n<ul>\n<li>预处理前缀和数组</li>\n<li>区间和 &#x3D; S[r] - S[l-1]</li>\n</ul>\n</li>\n<li><p>二维前缀和</p>\n<ul>\n<li>预处理二维前缀和数组</li>\n<li>子矩阵和 &#x3D; S[x2,y2] - S[x2,y1-1] - S[x1-1,y2] + S[x1-1,y1-1]</li>\n</ul>\n</li>\n<li><p>一维差分</p>\n<ul>\n<li>构建差分数组：B[i] &#x3D; A[i] - A[i-1]</li>\n<li>区间增减：B[l] +&#x3D; c, B[r+1] -&#x3D; c</li>\n<li>还原原数组：A[i] &#x3D; B[1] + B[2] + … + B[i]</li>\n</ul>\n</li>\n<li><p>二维差分</p>\n<ul>\n<li>构建差分矩阵：B[i,j] &#x3D; A[i,j] - A[i-1,j] - A[i,j-1] + A[i-1,j-1]</li>\n<li>子矩阵增减：B[x1,y1] +&#x3D; c, B[x2+1,y1] -&#x3D; c, B[x1,y2+1] -&#x3D; c, B[x2+1,y2+1] +&#x3D; c</li>\n<li>还原原矩阵：A[i,j] &#x3D; 前缀和(B[1<del>i,1</del>j])</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h3><ul>\n<li>前缀和预处理：O(n)或O(n²)</li>\n<li>前缀和查询：O(1)</li>\n<li>差分构建：O(n)或O(n²)</li>\n<li>差分区间操作：O(1)</li>\n<li>差分还原：O(n)或O(n²)</li>\n</ul>\n<h3 id=\"经典题目\"><a href=\"#经典题目\" class=\"headerlink\" title=\"经典题目\"></a>经典题目</h3><ol>\n<li><p><a href=\"https://www.acwing.com/problem/content/797/\">前缀和</a></p>\n<ul>\n<li>AcWing 795：一维前缀和模板题</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.acwing.com/problem/content/798/\">子矩阵的和</a></p>\n<ul>\n<li>AcWing 796：二维前缀和模板题</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.acwing.com/problem/content/799/\">差分</a></p>\n<ul>\n<li>AcWing 797：差分模板题</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.acwing.com/problem/content/800/\">差分矩阵</a></p>\n<ul>\n<li>AcWing 798：二维差分模板题</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><ol>\n<li><p>区间查询</p>\n<ul>\n<li>快速求解区间和</li>\n<li>统计区间内的特定元素个数</li>\n</ul>\n</li>\n<li><p>区间修改</p>\n<ul>\n<li>对区间统一加减</li>\n<li>航班订票系统</li>\n<li>差分图像处理（二维差分）</li>\n<li>区域亮度调整</li>\n<li>地图高度修改</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li><p>数组下标</p>\n<ul>\n<li>从1开始更方便处理</li>\n<li>注意边界情况</li>\n</ul>\n</li>\n<li><p>空间优化</p>\n<ul>\n<li>可以直接在原数组上构建前缀和</li>\n<li>差分数组可以复用原数组</li>\n</ul>\n</li>\n<li><p>应用技巧</p>\n<ul>\n<li>前缀和可以维护多个信息</li>\n<li>差分适合大量区间修改操作</li>\n<li>二维操作注意子矩阵的边界处理</li>\n<li>二维差分的四个角要配对操作</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"代码模板\"><a href=\"#代码模板\" class=\"headerlink\" title=\"代码模板\"></a>代码模板</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 一维前缀和</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">prefix_sum_1d</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// S[0] = 0;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ )</span><br><span class=\"line\">        S[i] = S[i - <span class=\"number\">1</span>] + a[i];</span><br><span class=\"line\">    <span class=\"comment\">// 查询区间[l,r]的和</span></span><br><span class=\"line\">    <span class=\"comment\">// S[r] - S[l - 1]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二维前缀和</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">prefix_sum_2d</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ )</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j ++ )</span><br><span class=\"line\">            S[i][j] = S[i<span class=\"number\">-1</span>][j] + S[i][j<span class=\"number\">-1</span>] - S[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] + a[i][j];</span><br><span class=\"line\">    <span class=\"comment\">// 查询子矩阵和[(x1,y1), (x2,y2)]</span></span><br><span class=\"line\">    <span class=\"comment\">// S[x2][y2] - S[x2][y1-1] - S[x1-1][y2] + S[x1-1][y1-1]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一维差分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">diff_1d</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 构建差分数组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) </span><br><span class=\"line\">        b[i] = a[i] - a[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"comment\">// 区间[l,r]加上c</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r, <span class=\"type\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">        b[l] += c;</span><br><span class=\"line\">        b[r + <span class=\"number\">1</span>] -= c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 还原原数组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i ++ ) </span><br><span class=\"line\">        a[i] = a[i - <span class=\"number\">1</span>] + b[i];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二维差分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">diff_2d</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 构建差分矩阵</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++) </span><br><span class=\"line\">            b[i][j] = a[i][j] - a[i<span class=\"number\">-1</span>][j] - a[i][j<span class=\"number\">-1</span>] + a[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>];</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 子矩阵[x1,y1,x2,y2]加上c</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> x1, <span class=\"type\">int</span> y1, <span class=\"type\">int</span> x2, <span class=\"type\">int</span> y2, <span class=\"type\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">        b[x1][y1] += c;</span><br><span class=\"line\">        b[x2 + <span class=\"number\">1</span>][y1] -= c;</span><br><span class=\"line\">        b[x1][y2 + <span class=\"number\">1</span>] -= c;</span><br><span class=\"line\">        b[x2 + <span class=\"number\">1</span>][y2 + <span class=\"number\">1</span>] += c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 还原原矩阵</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= m; j++) </span><br><span class=\"line\">            a[i][j] = a[i<span class=\"number\">-1</span>][j] + a[i][j<span class=\"number\">-1</span>] - a[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>] + b[i][j];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","feature":true,"text":"前缀和与差分算法思想 前缀和 对原数组求前缀和，得到新数组 通过新数组O(1)时间得到任意区间和 一维前缀和：S[i] = a[1] + a[2] + … + ...","permalink":"/post/prefix_sum","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BC%80%E5%92%8C%E4%B8%8E%E5%B7%AE%E5%88%86\"><span class=\"toc-text\">前缀和与差分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">算法思想</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">实现方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%8F%E5%85%B8%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">经典题目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">应用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">代码模板</span></a></li></ol></li></ol>","author":{"name":"Dollar","slug":"blog-author","avatar":"/images/cover/avatar.png","link":"/","description":"前途是光明的，道路是曲折的","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"经验帖汇总","uid":"d44f5b4becde69762048764f7a6b72f0","slug":"postgraduate_experience","date":"2025-01-16T13:30:00.000Z","updated":"2025-01-17T00:17:52.890Z","comments":true,"path":"api/articles/postgraduate_experience.json","keywords":null,"cover":"/images/cover/sunset.png","text":"经验贴汇总SUDA （25级）原文链接 背景：低rank+弱科研+弱竞赛+低六级+四非鼠 去向：苏州大学计算机科学与技术（学硕） 待补充… NJU 待补充… S...","permalink":"/post/postgraduate_experience","photos":[],"count_time":{"symbolsCount":195,"symbolsTime":"1 mins."},"categories":[{"name":"保研","slug":"保研","count":1,"path":"api/categories/保研.json"}],"tags":[{"name":"保研","slug":"保研","count":1,"path":"api/tags/保研.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/cover/avatar.png","link":"/","description":"前途是光明的，道路是曲折的","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"高精度运算","uid":"b12e6a1f5d7efc2ae0896995e35e825f","slug":"high_precision","date":"2025-01-15T12:30:00.000Z","updated":"2025-01-17T00:17:36.063Z","comments":true,"path":"api/articles/high_precision.json","keywords":null,"cover":"/images/cover/mountain.png","text":"高精度运算算法思想高精度运算用于处理超出常规整型范围的数值计算： 用数组存储大整数，每一位对应一个数组元素 按照竖式运算的方式模拟运算过程 需要处理进位和借位 ...","permalink":"/post/high_precision","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/cover/avatar.png","link":"/","description":"前途是光明的，道路是曲折的","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}