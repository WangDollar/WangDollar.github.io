{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"binary_search","date":"2025-01-15T12:00:00.000Z","updated":"2025-01-16T03:16:06.276Z","comments":true,"path":"api/articles/binary_search.json","keywords":null,"cover":"/images/cloud.png","content":"<h2 id=\"二分查找\"><a href=\"#二分查找\" class=\"headerlink\" title=\"二分查找\"></a>二分查找</h2><h3 id=\"算法思想\"><a href=\"#算法思想\" class=\"headerlink\" title=\"算法思想\"></a>算法思想</h3><p>二分查找的核心思想是：</p>\n<ul>\n<li>每次将区间分成两部分</li>\n<li>判断目标值在哪个区间</li>\n<li>舍弃不可能的区间</li>\n<li>不断缩小范围直到找到目标值</li>\n</ul>\n<h3 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h3><p>二分查找有两种常见模板：</p>\n<ol>\n<li><p>整数二分</p>\n<ul>\n<li>区间[l, r]被划分成[l, mid]和[mid + 1, r]</li>\n<li>更新时，l &#x3D; mid + 1或r &#x3D; mid</li>\n</ul>\n</li>\n<li><p>浮点数二分</p>\n<ul>\n<li>直接取mid &#x3D; (l + r) &#x2F; 2</li>\n<li>更新时，l &#x3D; mid或r &#x3D; mid</li>\n<li>通过判断精度来结束循环</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h3><ul>\n<li>时间复杂度：O(logn)</li>\n<li>空间复杂度：O(1)</li>\n<li>要求：序列必须有序</li>\n</ul>\n<h3 id=\"经典题目\"><a href=\"#经典题目\" class=\"headerlink\" title=\"经典题目\"></a>经典题目</h3><ol>\n<li><p><a href=\"https://www.acwing.com/problem/content/791/\">数的范围</a></p>\n<ul>\n<li>AcWing 789：在有序数组中找到目标值的起始和结束位置</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.acwing.com/problem/content/792/\">数的三次方根</a></p>\n<ul>\n<li>AcWing 790：浮点数二分的典型应用</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><ol>\n<li>在有序序列中查找元素</li>\n<li>求解最大值最小化问题</li>\n<li>求解最小值最大化问题</li>\n<li>求解平方根、立方根等数值计算问题</li>\n</ol>\n<h3 id=\"代码模板\"><a href=\"#代码模板\" class=\"headerlink\" title=\"代码模板\"></a>代码模板</h3><div class=\"language-cpp\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">cpp</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">SL</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">l </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> r </span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&gt;=</span><span style=\"color: #F07178\"> x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> r </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> l </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> l</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #82AAFF\">SR</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">l</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">r</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #BABED8\"> </span><span style=\"color: #C792EA\">int</span><span style=\"color: #BABED8\"> </span><span style=\"color: #BABED8; font-style: italic\">x</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">while</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">l </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #BABED8\"> r</span><span style=\"color: #89DDFF\">)</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #C792EA\">int</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> l </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> r </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">&gt;&gt;</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #BABED8\">q</span><span style=\"color: #89DDFF\">[</span><span style=\"color: #F07178\">mid</span><span style=\"color: #89DDFF\">]</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&lt;=</span><span style=\"color: #F07178\"> x</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #F07178\"> l </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">else</span><span style=\"color: #F07178\"> r </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> mid </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #BABED8\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #BABED8\"> r</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div>","text":"二分查找算法思想二分查找的核心思想是： 每次将区间分成两部分 判断目标值在哪个区间 舍弃不可能的区间 不断缩小范围直到找到目标值 实现方法二分查找有两种常见模板...","permalink":"/post/binary_search","photos":[],"count_time":{"symbolsCount":820,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE\"><span class=\"toc-text\">二分查找</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">算法思想</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">实现方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%8F%E5%85%B8%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">经典题目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">应用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">代码模板</span></a></li></ol></li></ol>","author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"前途是光明的，道路是曲折的","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"高精度运算","uid":"b12e6a1f5d7efc2ae0896995e35e825f","slug":"high_precision","date":"2025-01-15T12:30:00.000Z","updated":"2025-01-16T03:16:15.237Z","comments":true,"path":"api/articles/high_precision.json","keywords":null,"cover":"/images/mountain.png","text":"高精度运算算法思想高精度运算用于处理超出常规整型范围的数值计算： 用数组存储大整数，每一位对应一个数组元素 按照竖式运算的方式模拟运算过程 需要处理进位和借位 ...","permalink":"/post/high_precision","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"前途是光明的，道路是曲折的","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"归并排序","uid":"c668d79bcd807cc57a11ce29c7e08a39","slug":"merge_sort","date":"2025-01-15T11:30:00.000Z","updated":"2025-01-16T03:16:23.841Z","comments":true,"path":"api/articles/merge_sort.json","keywords":null,"cover":"/images/tree_flower.png","text":"归并排序算法思想归并排序的核心思想是分治法： 将数组平均分成两个子数组 递归排序左右两个子数组 将两个有序的子数组合并成一个有序数组 不断重复这个过程，直到整个...","permalink":"/post/merge_sort","photos":[],"count_time":{"symbolsCount":839,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"前途是光明的，道路是曲折的","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}