{"title":"高精度运算","uid":"b12e6a1f5d7efc2ae0896995e35e825f","slug":"high_precision","date":"2025-01-15T12:30:00.000Z","updated":"2025-01-15T14:38:19.676Z","comments":true,"path":"api/articles/high_precision.json","keywords":null,"cover":"/images/favicon.png","content":"<h2 id=\"高精度运算\"><a href=\"#高精度运算\" class=\"headerlink\" title=\"高精度运算\"></a>高精度运算</h2><h3 id=\"算法思想\"><a href=\"#算法思想\" class=\"headerlink\" title=\"算法思想\"></a>算法思想</h3><p>高精度运算用于处理超出常规整型范围的数值计算：</p>\n<ul>\n<li>用数组存储大整数，每一位对应一个数组元素</li>\n<li>按照竖式运算的方式模拟运算过程</li>\n<li>需要处理进位和借位</li>\n<li>注意结果的正确性和前导零的处理</li>\n</ul>\n<h3 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h3><p>常见的高精度运算包括：</p>\n<ol>\n<li><p>高精度加法</p>\n<ul>\n<li>从低位到高位逐位相加</li>\n<li>处理进位</li>\n<li>最高位可能需要进位</li>\n</ul>\n</li>\n<li><p>高精度减法</p>\n<ul>\n<li>从低位到高位逐位相减</li>\n<li>处理借位</li>\n<li>需要判断结果的正负</li>\n</ul>\n</li>\n<li><p>高精度乘法</p>\n<ul>\n<li>可以是高精度乘以单精度</li>\n<li>也可以是高精度乘以高精度</li>\n<li>注意结果的位数</li>\n</ul>\n</li>\n<li><p>高精度除法</p>\n<ul>\n<li>通常是高精度除以单精度</li>\n<li>从高位到低位逐位除</li>\n<li>需要处理余数的传递</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"代码模板\"><a href=\"#代码模板\" class=\"headerlink\" title=\"代码模板\"></a>代码模板</h3><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 高精度加法</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">add</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>() || i &lt; B.<span class=\"built_in\">size</span>(); i ++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; A.<span class=\"built_in\">size</span>()) t += A[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; B.<span class=\"built_in\">size</span>()) t += B[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(t % <span class=\"number\">10</span>);</span><br><span class=\"line\">        t /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (t) C.<span class=\"built_in\">push_back</span>(t);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 高精度减法</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">sub</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, vector&lt;<span class=\"type\">int</span>&gt; &amp;B)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>(); i ++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        t = A[i] - t;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; B.<span class=\"built_in\">size</span>()) t -= B[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>((t + <span class=\"number\">10</span>) % <span class=\"number\">10</span>);</span><br><span class=\"line\">        t = t &lt; <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 高精度乘单精度</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">mul</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, <span class=\"type\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; A.<span class=\"built_in\">size</span>() || t; i ++ )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &lt; A.<span class=\"built_in\">size</span>()) t += A[i] * b;</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(t % <span class=\"number\">10</span>);</span><br><span class=\"line\">        t /= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 高精度除以单精度</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">div</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt; &amp;A, <span class=\"type\">int</span> b, <span class=\"type\">int</span> &amp;r)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; C;</span><br><span class=\"line\">    r = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = A.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i -- )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        r = r * <span class=\"number\">10</span> + A[i];</span><br><span class=\"line\">        C.<span class=\"built_in\">push_back</span>(r / b);</span><br><span class=\"line\">        r %= b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">reverse</span>(C.<span class=\"built_in\">begin</span>(), C.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (C.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span> &amp;&amp; C.<span class=\"built_in\">back</span>() == <span class=\"number\">0</span>) C.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h3><ul>\n<li>加法和减法：O(n)，n为较长数的位数</li>\n<li>乘法：O(n×m)，n和m为两个数的位数</li>\n<li>除法：O(n)，n为被除数的位数</li>\n<li>空间复杂度：O(n)或O(n+m)</li>\n</ul>\n<h3 id=\"经典题目\"><a href=\"#经典题目\" class=\"headerlink\" title=\"经典题目\"></a>经典题目</h3><ol>\n<li><p><a href=\"https://www.acwing.com/problem/content/793/\">高精度加法</a></p>\n<ul>\n<li>AcWing 791：实现任意长度正整数相加</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.acwing.com/problem/content/794/\">高精度减法</a></p>\n<ul>\n<li>AcWing 792：实现任意长度正整数相减</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.acwing.com/problem/content/795/\">高精度乘法</a></p>\n<ul>\n<li>AcWing 793：高精度数乘以单精度数</li>\n</ul>\n</li>\n<li><p><a href=\"https://www.acwing.com/problem/content/796/\">高精度除法</a></p>\n<ul>\n<li>AcWing 794：高精度数除以单精度数</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><ol>\n<li>大数运算</li>\n<li>科学计算</li>\n<li>密码学计算</li>\n<li>金融计算</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li><p>数据存储</p>\n<ul>\n<li>通常低位在前，高位在后</li>\n<li>可以用vector动态存储</li>\n</ul>\n</li>\n<li><p>边界处理</p>\n<ul>\n<li>注意前导零的处理</li>\n<li>考虑特殊情况（0、负数等）</li>\n<li>除法要特别注意除数为0的情况</li>\n</ul>\n</li>\n<li><p>优化技巧</p>\n<ul>\n<li>可以适当增大基数减少位数</li>\n<li>处理前导零时注意保留个位数的0</li>\n<li>除法可以用二分优化大数相除</li>\n</ul>\n</li>\n</ol>\n","feature":true,"text":"高精度运算算法思想高精度运算用于处理超出常规整型范围的数值计算： 用数组存储大整数，每一位对应一个数组元素 按照竖式运算的方式模拟运算过程 需要处理进位和借位 ...","permalink":"/post/high_precision","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AB%98%E7%B2%BE%E5%BA%A6%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">高精度运算</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">算法思想</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">实现方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF\"><span class=\"toc-text\">代码模板</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90\"><span class=\"toc-text\">复杂度分析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%8F%E5%85%B8%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">经典题目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">应用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li></ol></li></ol>","author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"前缀和与差分","uid":"f65c2271ed43cdf14e2eea3c0c440d44","slug":"prefix_sum","date":"2025-01-15T13:00:00.000Z","updated":"2025-01-15T14:41:06.949Z","comments":true,"path":"api/articles/prefix_sum.json","keywords":null,"cover":"/images/favicon.png","text":"前缀和与差分算法思想 前缀和 对原数组求前缀和，得到新数组 通过新数组O(1)时间得到任意区间和 一维前缀和：S[i] = a[1] + a[2] + … + ...","permalink":"/post/prefix_sum","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"binary_search","date":"2025-01-15T12:00:00.000Z","updated":"2025-01-15T14:36:03.901Z","comments":true,"path":"api/articles/binary_search.json","keywords":null,"cover":"/images/favicon.png","text":"二分查找算法思想二分查找的核心思想是： 每次将区间分成两部分 判断目标值在哪个区间 舍弃不可能的区间 不断缩小范围直到找到目标值 实现方法二分查找有两种常见模板...","permalink":"/post/binary_search","photos":[],"count_time":{"symbolsCount":964,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"}],"author":{"name":"Dollar","slug":"blog-author","avatar":"/images/avatar.png","link":"/","description":"四非鼠鼠","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}